<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<html  
    version="XHTML+RDFa 1.0"
    xmlns="http://www.w3.org/1999/xhtml" 
    xml:lang="en"
	xmlns:dbpedia = "http://dbpedia.org/resource/"
	xmlns:dbprop = "http://dbpedia.org/property/"
	xmlns:dbonto = "http://dbpedia.org/ontology/"
    xmlns:yago = "http://dbpedia.org/class/yago/"
	xmlns:rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs = "http://www.w3.org/2000/01/rdf-schema#"
	xmlns:iks = "http://www.iks-project.eu/#"
	xmlns:fise = "http://fise.iks-project.eu/ontology/"
	xmlns:foaf = "http://xmlns.com/foaf/0.1/"
	xmlns:dc = "http://purl.org/dc/terms/"
	xmlns:geo = "http://www.w3.org/2003/01/geo/wgs84_pos#"
	xmlns:google = "http://rdf.data-vocabulary.org/#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfcal="http://www.w3.org/2002/12/cal#"
    xmlns:demo="http://demo.palsuapp.info/"
    xmlns:mgd="http://www.midgard-project.org/midgard2/9.03"
    xmlns:dcterms="http://purl.org/dc/terms/"
    xmlns:sioc="http://rdfs.org/sioc/ns#">
	<head>

        <title>Palsu App</title>
        <link type="text/css" rel="stylesheet" href="styles/base.css">
        
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
        
        <script src="js/layout.js" type="text/javascript"></script>
        <script src="js/contentmanager.js" type="text/javascript"></script>
        <script src="js/discussionmanager.js" type="text/javascript"></script>

        <base href="/">
        
        
        <!-- 3rd-party libs 
		<script type="text/javascript" src="../lib/jquery/1.4/jquery-1.4.4.min.js"></script>
		<script type="text/javascript" src="../lib/underscoreJS/underscore.js"></script>
		<script type="text/javascript" src="../lib/backboneJS/backbone.js"></script>
        -->
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/lib/jquery-ui/1.8/js/jquery-ui-1.8.11.custom.min.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/lib/rdfquery/latest/jquery.rdfquery.rules.js"></script>
        
        <!-- VIE 
		<script type="text/javascript" src="../lib/vie/vie.js"></script>
        -->
        
		<!-- VIE^2 -->
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/core/util.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/core/core.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/core/connector.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/core/mapping.js"></script>
		
		<!-- Connector plug-ins 
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/connector/stanbol.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/connector/dbpedia.js"></script>
		-->
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/connector/rdfa.js"></script>
		
		<!-- Mapping plug-ins -->
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/mapping/person.js"></script>
		<script type="text/javascript" src="/deps/aloha-editor/src/plugin/vie2/VIE-2/src/mapping/task.js"></script>

		<!-- How the API would look like! -->
		<script type="text/javascript">
		    $(function() {
                
                /*$.VIE2.connectors['stanbol'].options({
             	    "proxy_url" : "/deps/aloha-editor/src/plugin/vie2/VIE-2/utils/proxy/proxy.php",
             	    "enhancer_url" : "http://stanbol.iksfordrupal.net:9000/engines/",
             	    "entityhub_url" : "http://stanbol.iksfordrupal.net:9000/entityhub/"
                });
                
                $.VIE2.connectors['dbpedia'].options({
	                "proxy_url" : "/deps/aloha-editor/src/plugin/vie2/VIE-2/utils/proxy/proxy.php"
                });*/
                
                $.VIE2.Backbone['person']['collection'].bind("add", function (p) {
                    
                    new PersonView({id: 'person-' + PseudoGuid.GetNew(), model: p});
                });
                
                $.VIE2.Backbone['task']['collection'].bind("add", function (t) {
                     new TaskView({id: 'task-' + PseudoGuid.GetNew(), model: t});
                });
                
                var PersonView = Backbone.View.extend({
                    tagName: 'li',
                    
                    initialize: function() {
                        _.bindAll(this, "render");
                        this.model.bind('change', this.render);
                        $(this.el).css('display', 'none');
                        $('.persons').append($(this.el));
                    },
                    
                    render: function() {
                        var name = this.model.get("foaf:name");
                        if (name && name[0]) {
                            var names = name[0].value;
                            for (var x = 1; x < name.length; x++) {
                                names += " aka. " + name[x].value;
                            }
                            $(this.el).text(names);
                            $(this.el).css('display', 'list-item');
                        } else {
                           $(this.el).css('display', 'none');
                        }
                      return this;
                    }
                });
                
                var AgentView = Backbone.View.extend({
                    
                    tagName: 'b',
                    
                    initialize: function() {
                        _.bindAll(this, "render");
                      this.model.bind('change', this.render);
                    },
                    
                    render: function() {
                        var name = this.model.get("foaf:name");
                        
                        if (name && name[0]) {
                            name = name[0].value;
                        } else {
                            name = "???";
                        }
                        $(this.el).text(name);
                      return this;
                    }
                });
                
                var TaskView = Backbone.View.extend({
                    tagName: 'li',
                    
                    initialize: function() {
                        _.bindAll(this, "render");
                      this.model.bind('change', this.render);
                      $('.tasks').append($(this.el));
                    },
                    
                    render: function() {
                        var agentUri = (this.model.get("rdfcal:hasAgent"))? this.model.get("rdfcal:hasAgent")[0].toString() : "";
                        var agentName = "";
                        
                        var agentModel = $.VIE2.Backbone['person']['collection'].get(agentUri);
                        var agentView = new AgentView({id: 'agent-' + PseudoGuid.GetNew(), model: agentModel})
                        .render();
                        
                        var name = (this.model.get("rdfcal:name"))? this.model.get("rdfcal:name")[0].value : "";
                        var startDate = (this.model.get("rdfcal:startDate"))? this.model.get("rdfcal:startDate")[0].value : "";
                        var targetDate = (this.model.get("rdfcal:targetDate"))? this.model.get("rdfcal:targetDate")[0].value : "";

                        $(this.el)
                        .append($(agentView.el))
                        .append($("<span> needs to <i>" + name + "</i> before " + targetDate + "!"));
                        return this;
                    },
                });
            });
            
			function analyzeText (elem, button) {
				//disable button
				//$(button).attr('disabled', 'disabled');
                $(button).text('Analyzing...');
				
				//start analysis
				elem.vie2().vie2('analyze', function (status) {
                    if (status === 'ok') {
                        $(button).text('Done!');
                    }
                });
			};
                        
            function annotateAsTask (elem, agent, todo, targetDate, startDate) {
                var x = $.rdf.blank('[]');
                elem.vie2().vie2('annotate',
                    [agent + ' a foaf:Person']);
                elem.vie2().vie2('annotate',
                  [
                  x + ' a rdfcal:Task',
                  x + ' rdfcal:hasAgent ' + ((agent === '' || agent === undefined)? '[]' : agent),
                  x + ' rdfcal:name ' + ((todo === '' || todo === undefined)? '' : todo),
                  x + ' rdfcal:startDate ' + ((startDate === '' || startDate === undefined)? '\"now\"' : startDate), //TODO: figure out how to write proper date
                  x + ' rdfcal:targetDate ' + ((targetDate === '' || targetDate === undefined)? '\"tonight\"' : targetDate) //TODO: figure out how to write proper date
                  ]);
            };
            
            
            function addName () {
                $(document).vie2().vie2('annotate',
                  '<http://dbpedia.org/resource/Barack_Obama> foaf:name "B B Obama"');
            };
		</script>
        
    </head>
    
    <body typeof="mgd:event" about="#meeting">
        <div id="account" typeof="foaf:Person" about="#user">
            <p>
                Hello, <span property="foaf:nick" id="username"><%= username %></span>!
                | <a href="#">Dashboard</a> &middot; <a href="/signout">Sign-out</a>
            </p>
        </div>
        <h1 id="meeting-title" property="dcterms:title">Meeting Title</h1>
        <div id="main">
            <div id="agenda">
                <h2>Agenda</h2>
                <section property="mgd:agenda">
                    <p>
                        Write the meeting agenda here.
                    </p>
                </section>
            </div>
            <div id="chat-history" rel="sioc:container_of" rev="sioc:has_container">
                <dl about="#meeting-comments" typeof="sioc:Forum" rel="sioc:container_of"  rev="sioc:has_container">
                    <div typeof="sioc:Post" about="#post1">
                        <dt property="dc:creator">Screen name</dt>
                        <dd class="message" >
                            <div property="sioc:content">
                                <p>Post contents</p>
                            </div>
                        </dd>
                        <hr />
                    </div>
                </dl>
            </div>
            <div id="chat-input">
                <div></div>
            </div>
        </div>
        <div id="sidebar">
            <div>
                <h2>Participants</h2>
                <div>
                    <button onclick='analyzeText($("#chat-history"), this);'>Get Participants</button>
                    <ul class="persons"></ul>
                </div>
            </div>
            <div>
                <h2>Tasks</h2>
                <div></div>
            </div>
            <div>
                <h2>Mentions</h2>
                <div></div>
            </div>
            <div>
                <h2>Documents</h2>
                <div></div>
            </div>
        </div>

	<script type="text/javascript" defer>
		(function(window,undefined){
			// Prepare
			var
				$ = window.jQuery,
				GENTICS = window.GENTICS,
				$body = $('body');

			// Customise
			GENTICS.Aloha.settings = {
				logLevels: {'error': true, 'warn': true, 'info': true, 'debug': false},
				errorhandling : false,
				"i18n": {
					// let the system detect the users language
					//"acceptLanguage": 'de-de,de;q=0.8,it;q=0.6,en-us;q=0.7,en;q=0.2'
				},
				"plugins": {
					"com.gentics.aloha.plugins.Ribbon": {
						enable: false
					},

					"com.gentics.aloha.plugins.Format": {
						// all elements with no specific configuration get this configuration
						config : [ 'b', 'i','sub','sup'],
							editables : {
							// no formatting allowed for title
							'#meeting-title'	: [ ],
							// formatting for all editable DIVs
							'#chat-input'		: [ 'b', 'i', 'del', 'sub', 'sup'  ],
							// content is a DIV and has class .article so it gets both buttons
							'.article'	: [ 'b', 'i', 'p', 'title', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre', 'removeFormat']
							}
					},

					"com.gentics.aloha.plugins.Paste" : {
					   config: { pasteHandlers: ['genericpastehandler', 'oembedpastehandler', 'wordpastehandler']}
					}
				}
			};

			// Bind to Aloha Ready Event
			$body.bind('aloha',function(){
				$('#chat-input').aloha();
			});
			
		})(window);

	</script>



    </body>
</html>
